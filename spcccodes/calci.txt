%{
#include "y.tab.h"
#include<math.h>
extern double vbltable[26];

%}
%%
[0-9]+      {yylval.dval=atof(yytext); return NUMBER;  }
[\t];
[a-z]                      {yylval.vblno=yytext[0] - 'a'; return NAME;}
"$"           { return 0;}
\n  |
.                 return yytext[0];
%%
int yywrap(void)
{
  return 0;
}
int main(void)
{
 yyparse();
return 0;
}
int yyerror(void)
{
printf("error");
exit(1);
}


calci.y

%{
double vbltable[26];
int yylex(void);
%}
%union{
 double dval;
 int vblno;
}
%token <vblno> NAME
%token <dval> NUMBER
%left '-' '+'
%left '*' '/'
%nonassoc UMINUS
%type <dval> expression
%%
statement_list: statement '\n'
                            |  statement_list statement '\n'
                            ;
statement: NAME '=' expression                {vbltable[$1] = $3;}
                       | expression                 {printf("=%g\n",$1);  }
                       ;
expression: expression '+' expression              { $$=$1 + $3;}
                   | expression '-' expression             { $$=$1 - $3;}
                     | expression '*' expression                { $$=$1 * $3;}
                    | expression '/' expression     {   if($3==0.0)
					yyerror("divide by zero");
					else
					 $$ = $1/$3;
				}
                          | '-' expression %prec UMINUS { $$ = -$2;}
                          | '(' expression ')'  {$$ =$2;}
                          | NUMBER
                          | NAME {$$ = vbltable[$1];  }
                         
%%
;
